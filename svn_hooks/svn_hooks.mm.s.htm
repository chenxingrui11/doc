---
layout: master
title: WorldHello Document
stylesheets: ["/docbook/includes/css/docbook.css"]
---

<h1>Subversion Hooks</h1><p>

<ul><li><a name="Freemind_Link_249448778"></a><span style="">Subversion Hooks</span>
<ul><li><a name="Freemind_Link_1829461756"></a><span style="">前言</span>
<ul><li><a name="Freemind_Link_242631253"></a><span style="">Subversion 被视为 CVS 的替代者</span>
<ul><li><a name="Freemind_Link_319218594"></a><span style="">它改进了 CVS 恼人的文件名、目录名修改等多个 CVS 的痼疾</span></li></ul>
<ul><li><a name="Freemind_Link_1600937407"></a><span style="">它最大限度的保持了和 CVS 的一致，照顾了 CVS 的使用习惯</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_635219551"></a><span style="">Subversion 也支持扩展，成为 Hooks（钩子脚本），类似于 CVS 的 CVSROOT 脚本扩展</span>
<ul><li><a name="Freemind_Link_1711793052"></a><span style="">CVSROOT 脚本扩展可以参见 WHODO 的这篇文章</span>
<ul><li><a name="Freemind_Link_1350655655"></a><span style="">《CVS Howto》</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_755276861"></a><span style="">WHODO 项目采用 Subversion 作为版本控制系统。本文介绍了 WHODO SVN 的 Hooks 定制</span></li></ul>
<ul><li><a name="Freemind_Link_1125508649"></a><span style="">本文的 Hooks 脚本仅在 svn 1.1.4 和 svn 1.3.1 上进行过测试。</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_12955572"></a><span style="">Hooks 定制的注意事项</span>
<ul><li><a name="Freemind_Link_1989410224"></a><span style="">1. 权限：脚本是否具有可执行权限？</span>
<ul><li><a name="Freemind_Link_1858690837"></a><span style="">chmod a+rx</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1762018234"></a><span style="">2. 不要依赖系统的环境变量，尤其是 PATH</span>
<ul><li><a name="Freemind_Link_1266356959"></a><span style="">为安全计，svn 执行脚本的环境变量为空
</span></li></ul>
<ul><li><a name="Freemind_Link_439307246"></a><span style="">命令使用绝对路径，或者定义 PATH 环境</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_753438287"></a><span style="">3. 并不是 STDERR 输出都返回控制台！</span>
<ul><li><a name="Freemind_Link_460453005"></a><span style="">不要认为输出到 stderr 的错误信息都输出</span></li></ul>
<ul><li><a name="Freemind_Link_1787831403"></a><span style="">只有 Hooks 运行失败，才将 STDERR 的输出传给 SVN 客户端</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1613787524"></a><span style="">4. DOS 格式还是 Unix 格式？</span>
<ul><li><a name="Freemind_Link_1307968056"></a><span style="">还有经常犯的一个错误是上传了 DOS 格式的脚本到 Linux/Unix 服务器</span></li></ul>
<ul><li><a name="Freemind_Link_589332917"></a><span style="">Linux 上可以用 dos2unix 命令将 DOS 换行符 0D0A 转换为 0A</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1873739551"></a><span style="">5. pre-revprop-change 和 post-revprop-change</span>
<ul><li><a name="Freemind_Link_699425888"></a><span style="">pre-commit, post-commit 脚本，只有 pre-commit 的返回值被检查，post-commit 即便运行错误，也不影响提交</span></li></ul>
<ul><li><a name="Freemind_Link_1798280722"></a><span style="">但 pre-revprop-change 和 post-revprop-change 这两个脚本任何一个脚本错误，都导致对 revision 的属性修改失败。（实现似乎和手册中有出入）</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1002081301"></a><span style="">SVN Hooks 介绍</span>
<ul><li><a name="Freemind_Link_175478029"></a><span style="">SVN Hooks 的位置</span>
<ul><li><a name="Freemind_Link_1097509871"></a><span style="">位于 Repository 的 hooks 目录下</span></li></ul>
<ul><li><a name="Freemind_Link_1102280622"></a><span style="">每一个 Repository 对应一个 hooks 目录</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_520027785"></a><span style="">SVN Hooks 名称</span>
<ul><li><a name="Freemind_Link_71495052"></a><span style="">SVN 1.3 有 9 个 Hooks 脚本，SVN Repository 刚刚配置完成，所有的 hooks 脚本以 .tmpl 扩展名存在。若要启用某个 hooks，去掉其 .tmpl 扩展名</span></li></ul>
<ul><li><a name="Freemind_Link_699775495"></a><span style="">$ ls repos/hooks/
post-commit.tmpl          post-unlock.tmpl          pre-revprop-change.tmpl
post-lock.tmpl            pre-commit.tmpl           pre-unlock.tmpl
post-revprop-change.tmpl  pre-lock.tmpl             start-commit.tmpl
</span></li></ul>
<ul><li><a name="Freemind_Link_1044753368"></a><span style="">Windows：Windows 上是根据扩展名判断可执行文件的，因此需要有扩展名，可以为 .exe 或 .bat</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_437655943"></a><span style="">依赖的第三方软件</span>
<ul><li><a name="Freemind_Link_465063730"></a><span style="">CPAN</span>
<ul><li><a name="Freemind_Link_163524614"></a><span style="">Config::IniFiles</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_976955561"></a><span style="">svn 的 SWIG python binding</span>
<ul><li><a name="Freemind_Link_1364838873"></a><span style="">测试是否已经正确安装</span>
<ul><li><a name="Freemind_Link_1504094154"></a><span style="">&gt;&gt;&gt; import sys
&gt;&gt;&gt; print sys.path
&gt;&gt;&gt; from svn import *
</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_430064243"></a><span style="">安装</span>
<ul><li><a name="Freemind_Link_687837226"></a><span style="">SWIG</span></li></ul>
<ul><li><a name="Freemind_Link_1672419484"></a><span style="">Subversion</span>
<ul><li><a name="Freemind_Link_344596333"></a><span style="">make swig-py &amp;&amp; make install-swig-py</span></li></ul>
</li></ul>
</li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1529978846"></a><span style="">下面分别介绍各个脚本以及可行的定制方案。脚本参见 hooks 目录。</span>

<ul><li><a name="Freemind_Link_24574542"></a><span style="">由于 Web 服务器限制，有的脚本可能无法从 web 直接下载。可以从 Whodo SVN 版本控制系统中下载。</span>

</li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_171468139"></a><span style="">start-commit</span>
<ul><li><a name="Freemind_Link_1265325155"></a><span style="">说明</span>
<ul><li><a name="Freemind_Link_1752246195"></a><span style="">在客户端还没有向服务器提交数据之前，即还没有建立 Subversion transaction（缩写为 txn） 之前，执行执行该脚本</span></li></ul>
<ul><li><a name="Freemind_Link_93978168"></a><span style="">因此该脚本可以很快执行，不像其他 pre-commit, post-commit 脚本要等到数据传输完成之后才执行。</span></li></ul>
<ul><li><a name="Freemind_Link_280993978"></a><span style="">也因此，该脚本获取的信息有限，不堪大用</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1647790886"></a><span style="">参数</span>
<ul><li><span style="">[1] REPOS-PATH   (the path to this repository)</span></li></ul>
<ul><li><span style="">[2] USER         (the authenticated user attempting to commit)</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_391433966"></a><span style="">定制：暂时关闭提交功能</span>

<ul><li><a name="Freemind_Link_196736307"></a><span style="">如果 hooks 目录中存在文件 COMMIT_LOCK ，则暂时终止提交</span></li></ul>
<ul><li><a name="Freemind_Link_1940553893"></a><span style="">代码示例</span>
<ul><li><a name="Freemind_Link_608923395"></a><span style="">#!/bin/sh

REPOS="$1"
USER="$2"
TOOLS_DIR=$REPOS/hooks/scripts
LOCK_FILE=$REPOS/hooks/COMMIT_LOCK

if [ -f $LOCK_FILE ]; then
    if [ -s $LOCK_FILE ]; then
        # Characters in LOCK_FILE should be utf-8 format!
        cat $LOCK_FILE &gt;&amp;2
    else
        # echo "系统维护中，暂时禁止提交。" &gt;&amp;2
        echo "Under maintenance, commit not allowed this time." &gt;&amp;2
    fi
    exit 1
fi
</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1547366246"></a><span style="">定制：用户黑名单</span>

<ul><li><a name="Freemind_Link_444103219"></a><span style="">如果 hooks 目录中存在 BLACK_LIST 文件，列在其中的用户，禁止提交</span></li></ul>
<ul><li><a name="Freemind_Link_1091827543"></a><span style="">代码示例</span>
<ul><li><a name="Freemind_Link_157352368"></a><span style="">BLACKLIST_FILE=$REPOS/hooks/BLACK_LIST

# check black_list
if [ -s $BLACKLIST_FILE ]; then
    ( grep -v "^#" "$BLACKLIST_FILE" | grep -iwq "$USER" ) &amp;&amp; \
    echo "$USER is not allowed to commit." &gt;&amp;2 &amp;&amp; exit 1
fi
</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1097493551"></a><span style="">定制：禁止未登录用户提交</span>

<ul><li><a name="Freemind_Link_1115859515"></a><span style="">不过 SVN 的身份验证仅在需要时提供，因此好像此定制未必有效？</span></li></ul>
<ul><li><a name="Freemind_Link_404061532"></a><span style="">代码示例</span>
<ul><li><a name="Freemind_Link_219150637"></a><span style="">#!/bin/sh

REPOS="$1"
USER="$2"

if [ "x$USER" = "x" ]; then
    echo "You must login before you can commit." 1&gt;&amp;2
    exit 1
fi
</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="_"></a><span style="">定制：简陋的权限控制示例</span>

<ul><li><a name="Freemind_Link_636590429"></a><span style="">一般不在 start-commit 中进行访问控制，因为只能限制到 repository 一级，不能精细到 repository 内部的目录、文件，因此基本没有用处。</span></li></ul>
<ul><li><a name="Freemind_Link_1690496770"></a><span style="">代码示例</span>
<ul><li><a name="Freemind_Link_1885924736"></a><span style="">case $REPOS in
/opt/svnhome/test)
    case $USER in
    jiangxin)
        exit 0
        ;;
    *)
        echo "User: $USER not allowed" &gt;&amp;2
        exit 1
        ;;
    esac
    ;;
*)
    echo "$REPOS is unchangeable for $USER" &gt;&amp;2
    exit 1
    ;;
esac
</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1552604930"></a><span style="">定制：检查 Repository 容量限制</span>

<ul><li><a name="Freemind_Link_1741196235"></a><span style="">参考: http://www.toutprogrammer.com/article_29_3.html</span></li></ul>
<ul><li><a name="Freemind_Link_115029409"></a><span style="">代码示例</span>
<ul><li><a name="Freemind_Link_667237169"></a><span style="">#!/bin/sh
# 参考: http://www.toutprogrammer.com/article_29_3.html

PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:$PATH

REPOS="$1"
USER="$2"

MAX_SIZE=20480 # 20MB
repos_size=`du -s $REPOS | cut -f 1`

if [ $repos_size -gt $MAX_SIZE ]; then
 echo "Repositroy $REPOS has exceeded maximum size: $MAX_SIZE" 1&gt;&amp;2
 exit 1
fi

exit 0</span></li></ul>
</li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_350859661"></a><span style="">pre-commit</span>
<ul><li><a name="Freemind_Link_419498374"></a><span style="">说明</span>
<ul><li><a name="Freemind_Link_1260287394"></a><span style="">在 Subversion transaction 完毕之后，在提交之前，执行该脚本</span>

</li></ul>
<ul><li><a name="Freemind_Link_757618632"></a><span style="">用 svnlook 可以查看 transaction 中包含的用户信息、提交信息等，具体参见 svnlook 命令帮助</span></li></ul>
<ul><li><a name="Freemind_Link_947833012"></a><span style="">用途</span>
<ul><li><a name="Freemind_Link_1545910634"></a><span style="">检查 commit log 格式是否符合规范</span></li></ul>
<ul><li><a name="Freemind_Link_388949523"></a><span style="">精细的“写权限”检查。如果是限制对 repos 的读取，需要使用 mod_authz_svn 模块！</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1905120985"></a><span style="">参数</span>
<ul><li><span style="">[1] REPOS-PATH   (the path to this repository)</span></li></ul>
<ul><li><span style="">[2] TXN-NAME     (the name of the txn about to be committed)</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_560308880"></a><span style="">定制：检查 Commit Log 长度</span>

<ul><li><a name="Freemind_Link_465629507"></a><span style="">bash</span>
<ul><li><a name="Freemind_Link_1937254108"></a><span style="">PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:$PATH

REPOS="$1"
TXN="$2"
TOOLS_DIR=$REPOS/hooks/scripts

# Make sure that the log message contains some text.
SVNLOOK=/usr/local/bin/svnlook

commitlog=`$SVNLOOK log -t "$TXN" "$REPOS"`
case `echo -n ${commitlog}|wc -c` in
    0)
        echo "Commit log is blank, please write a comment for your commit." &gt;&amp;2
        exit 1
        ;;
    [1-2])
        echo "Commit log must greater than 2 characters." &gt;&amp;2
        exit 1
        ;;
    *)
        ;;
esac
</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_291310660"></a><span style="">python</span>
<ul><li><a name="Freemind_Link_221843120"></a><span style="">因为我经常偷懒，输入一排相同字符（如 .............）当作 commit log</span></li></ul>
<ul><li><a name="Freemind_Link_1133818862"></a><span style="">def check_strlen(log_msg, minLen):
    log_length = len(log_msg)

    if log_length &gt; 0:
        char = log_msg[0]
        char2= log_msg[-1]        
        idx=1
        while idx &lt; len(log_msg):
            if char == -1 and char2 == -1 and log_length &lt;= 0:
                break

            if (char == log_msg[idx]) and (char != -1):
                log_length = log_length - 1
                char = log_msg[idx]
            else:
                char = -1

            if (char2 == log_msg[-idx]) and (char2 != -1):
                log_length = log_length - 1
                char2 = log_msg[-idx]
            else:
                char2 = -1

            idx = idx + 1
    
    if log_length &lt; minLen:
        sys.stderr.write ("Commit log must greater than %d characters, or too simple.\n" % minLen)
        sys.exit(1)
</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_988229172"></a><span style="">定制：检查 Commit Log 内容</span>

<ul><li><a name="Freemind_Link_161346053"></a><span style="">python</span>
<ul><li><a name="Freemind_Link_851727184"></a><span style="">def check_pattern(log_msg):
    patterns = [
               #r'(issue\s*[#]?[0-9]+)|(new.*:)|(bugfix:)',
               ]
    for pat in patterns:
        if re.compile(pat, re.I).search(log_msg, 1):
            continue
        else:
            sys.stderr.write ("Cannot find pattern: '%s' in commit log.\n" % pat)
            sys.exit(1)

</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_811796078"></a><span style="">定制：检查是否有同名（大小写不同）文件存在</span>
<ul><li><a name="Freemind_Link_1898018245"></a><span style="">如果服务器 repository 中存在文件名只是在大小写上有区分的文件，这在 Unix/Linux 上没有问题。
但是当客户端为 Windows 时，将会造成各种古怪的现象。
此扩展用于 检查 Repository 是否有同名文件（只是大小写不同而已），如果检查到，作为冲突报错。</span></li></ul>
<ul><li><a name="Freemind_Link_1197362435"></a><span style="">perl 实现</span>
<ul><li><a name="Freemind_Link_1524744976"></a><span style="">脚本 check-case-insensitive.pl</span></li></ul>
<ul><li><a name="Freemind_Link_1249815041"></a><span style="">对于 svn 1.1.x 需要使用 perl 的实现，直接调用 svnlook 命令行</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1090032332"></a><span style="">python 实现</span>
<ul><li><a name="Freemind_Link_986862169"></a><span style="">check-case-insensitive.py</span></li></ul>
<ul><li><a name="Freemind_Link_1584924966"></a><a style="" href="#Freemind_Link_976955561">依赖 subversin SWIG BINDINGS for Python</a>

</li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_879969591"></a><span style="">定制：检查新增文件的 svn:mime-type，以及 svn:eol-style 设置</span>
<ul><li><span style="">check-mime-type.pl</span></li></ul>
<ul><li><a name="Freemind_Link_1691230069"></a><span style="">check-mime-type.py</span>
<ul><li><a name="Freemind_Link_1565865854"></a><span style="">根据 check-mime-type.pl 改写，主要是为了移植到 Windows 平台</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1894063315"></a><span style="font-family:sansserif;font-size:12;">定制：检查用户权限</span>

<ul><li><a name="Freemind_Link_723034788"></a><span style="">perl</span>
<ul><li><a name="Freemind_Link_98876172"></a><span style="">脚本 commit-access-control.pl </span>
<ul><li><a name="Freemind_Link_146049174"></a><a style="" href="#Freemind_Link_163524614">依赖 CPAN 的 Config::IniFiles 包</a>


</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1373111112"></a><span style="">配置文件 commit-access-control.cfg</span>
<ul><li><a name="Freemind_Link_1546872934"></a><span style="">说明</span>
<ul><li><a name="Freemind_Link_727707778"></a><span style="">INI 格式</span>
<ul><li><a name="Freemind_Link_1446341946"></a><span style="">后面的覆盖前面的权限</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_344030860"></a><span style="">每一节必须包含 match 关键字</span>
<ul><li><span style="">match = PERL_REGEX</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1390261841"></a><span style="">每一节必须包含 access 关键字</span>
<ul><li><span style="">access = (read-only|read-write)</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_767014781"></a><span style="">可选的 users 关键字</span>
<ul><li><a name="Freemind_Link_279703555"></a><span style="">如果没有 users 关键字，则针对所有用户</span></li></ul>
<ul><li><a name="Freemind_Link_1098541840"></a><span style="">可以在一行写下多个用户名，用空格分隔</span>
<ul><li><span style="">users = username1 [username2 [username3 [username4 ...]]]</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_72520841"></a><span style="">也可以多条 users 语句</span>
<ul><li><a name="Freemind_Link_603761920"></a><span style="">users = username1 [username2]
users = username3 username4</span></li></ul>
</li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_208687515"></a><span style="">示例</span>
<ul><li><a name="Freemind_Link_55544916"></a><span style="">[Make everything read-only for all users]
match   = .*
access  = read-only

[Make project1 read-write for users Jane and Joe]
match  = ^(branches|tags|trunk)/project1
users  = jane joe
access = read-write

[However, we don't trust Joe with project1's Makefile]
match  = ^(branches|tags|trunk)/project1/Makefile
users  = joe
access = read-only</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_105630929"></a><span style="">缺点</span>
<ul><li><a name="Freemind_Link_1890799099"></a><span style="">ACL 控制功能没有下面的 python 脚本全面</span></li></ul>
<ul><li><a name="Freemind_Link_1300429277"></a><span style="">没有用户分组设置</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1231142932"></a><span style="">python</span>
<ul><li><a name="Freemind_Link_1639551067"></a><span style="">脚本 svnperms.py</span></li></ul>
<ul><li><a name="Freemind_Link_1190768767"></a><span style="">配置文件 svnperms.conf</span></li></ul>
<ul><li><a name="Freemind_Link_1879999269"></a><span style="">配置</span>
<ul><li><a name="Freemind_Link_120409017"></a><span style="">一个配置文件可以被多个 Repository 共享</span></li></ul>
<ul><li><a name="Freemind_Link_156304679"></a><span style="">定制用户组</span>
<ul><li><a name="Freemind_Link_1815360303"></a><span style="">可以包含多个 groups 节</span>
<ul><li><a name="Freemind_Link_924898227"></a><span style="">[groups]
group1 = user1 user2</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1977296194"></a><span style="">还可以包含只对 repository 有效的用户组</span>
<ul><li><a name="Freemind_Link_973312698"></a><span style="">[repos_basename groups]
group2 = user5 user6</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1236731758"></a><span style="">引用用户组时，前面加上一个 @ 符号，用以和 用户名 区分</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_6350132"></a><span style="">每个 repository 有一个 Section 与之对应</span>
<ul><li><a name="Freemind_Link_411327030"></a><span style="">section 的名称默认为 repository 的 basename，即去掉前面目录部分</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_405934291"></a><span style="">Section 中的权限策略由 KV 对组成</span>
<ul><li><a name="Freemind_Link_1293698447"></a><span style="">KV 对的 KEY 由常规表达式组成，和修改的文件路径匹配</span></li></ul>
<ul><li><a name="Freemind_Link_1545532412"></a><span style="">KV 对的 Value 定义用户访问控制。用户访问控制可以是多条访问控制策略用空格分开</span></li></ul>
<ul><li><a name="Freemind_Link_1376687684"></a><span style="">访问控制策略格式： 用户列表(权限列表)</span>
<ul><li><a name="Freemind_Link_335582192"></a><span style="">用户列表是逗号分开的用户或用户组</span></li></ul>
<ul><li><a name="Freemind_Link_1560301307"></a><span style="">用户列表为 * 则代表所有用户</span></li></ul>
<ul><li><a name="Freemind_Link_146664617"></a><span style="">权限列表是用逗号分隔的权限组合组成</span></li></ul>
<ul><li><a name="Freemind_Link_1965557205"></a><span style="">三种权限</span>
<ul><li><a name="Freemind_Link_723371794"></a><span style="">add</span>
<ul><li><a name="Freemind_Link_1278487954"></a><span style="">增加权限</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_728660956"></a><span style="">remove</span>
<ul><li><a name="Freemind_Link_489501699"></a><span style="">删除权限</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_421100828"></a><span style="">update</span>
<ul><li><a name="Freemind_Link_739563511"></a><span style="">修改文件以及修改属性权限</span></li></ul>
</li></ul>
</li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_291746832"></a><span style="">Section 之间可以继承</span>
<ul><li><a name="Freemind_Link_1290590895"></a><span style="">如</span>
<ul><li><a name="Freemind_Link_1118364385"></a><span style="">[example5 extends example2]
releases/[^/]+/ = *(add)</span></li></ul>
</li></ul>
</li></ul>
</li></ul>
</li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1651656383"></a><span style="">post-commit</span>
<ul><li><a name="Freemind_Link_1502073500"></a><span style="">说明</span>
<ul><li><a name="Freemind_Link_1265906043"></a><span style="">在提交之后，执行该脚本。提交已经完成，不可更改，因此本脚本的返回值被忽略</span>

</li></ul>
<ul><li><a name="Freemind_Link_53423889"></a><span style="">该脚本一般用于外发邮件</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_585423310"></a><span style="">参数</span>
<ul><li><span style="">[1] REPOS-PATH   (the path to this repository)</span></li></ul>
<ul><li><a name="Freemind_Link_1307812559"></a><span style="">[2] REV          (the number of the revision just committed)</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_517327792"></a><span style="">定制：发送邮件</span>
<ul><li><a name="Freemind_Link_1366272873"></a><span style="">perl</span>
<ul><li><a name="Freemind_Link_647666954"></a><span style="">commit-email.pl 脚本</span>
<ul><li><a name="Freemind_Link_522866990"></a><span style="">语法: commit-email.pl REPOS REVNUM [[-m regex] [options] [email_addr ...]] ...</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1056997416"></a><span style="">对于单个项目</span>
<ul><li><a name="Freemind_Link_612436782"></a><span style="">单个项目，可以用简化的命令行语法</span></li></ul>
<ul><li><a name="Freemind_Link_1081319678"></a><span style="">commit-email.pl REPOS REVNUM [email_addr ...]</span></li></ul>
<ul><li><a name="Freemind_Link_636909829"></a><span style="">单个项目有一个默认的配置项组。-m 匹配所有路径</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1818209814"></a><span style="">同时支持多个项目</span>
<ul><li><a name="Freemind_Link_627150122"></a><span style="">多个 -m 参数，形成多个配置项组： -m pattern --from EMAIL -s subject  EMAIL_ADDR </span></li></ul>
<ul><li><a name="Freemind_Link_47599674"></a><span style="">commit-email.pl REPOS REVNUM  \
    -m pattern --from EMAIL -s subject  EMAIL_ADDR  \
    -m pattern --from EMAIL -s subject  EMAIL_ADDR   \
    -m pattern --from EMAIL -s subject  EMAIL_ADDR </span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_773422517"></a><span style="">示例</span>
<ul><li><a name="Freemind_Link_1717572423"></a><span style="">commit-email.pl  -m "^(trunk|branches|tags)/project1" -</span></li></ul>
<ul><li><a name="Freemind_Link_364334517"></a><span style="">commit-email.pl "$REPOS" "$REV" commit-watchers@example.org
</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_117535430"></a><span style="">python</span>
<ul><li><a name="Freemind_Link_864016272"></a><span style="">mailer.py</span></li></ul>
<ul><li><a name="Freemind_Link_313911003"></a><span style="">配置文件 mailer.conf</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_93757014"></a><span style="">定制：与 Bugtracking 系统整合</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_140350054"></a><span style="">pre-revprop-change</span>
<ul><li><a name="Freemind_Link_584700812"></a><span style="">说明</span>
<ul><li><a name="Freemind_Link_294588507"></a><span style="">在修改 revision 属性之前，执行该脚本</span>

</li></ul>
<ul><li><a name="Freemind_Link_618089832"></a><span style="">如果该脚本不存在，或者该脚本返回 false，则不进行修改 revision 属性操作</span></li></ul>
<ul><li><a name="Freemind_Link_342198534"></a><span style="">因为 revision 的属性是没有版本控制的，因此脚本最好提供一个备份的机制</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1130021024"></a><span style="">参数</span>
<ul><li><a name="Freemind_Link_456433982"></a><span style="">[1] REPOS-PATH   (the path to this repository)</span></li></ul>
<ul><li><span style="">[2] REVISION     (the revision being tweaked)</span></li></ul>
<ul><li><span style="">[3] USER         (the username of the person tweaking the property)</span></li></ul>
<ul><li><span style="">[4] PROPNAME     (the property being set on the revision)</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_251547470"></a><span style="">定制：只允许修改 svn:log，不允许修改其他属性（如 svn:author） </span>
<ul><li><a name="Freemind_Link_7308153"></a><span style="">if [ "$ACTION" = "M" -a "$PROPNAME" = "svn:log" ]; then exit 0; fi

echo "Changing revision properties other than svn:log is prohibited" &gt;&amp;2
exit 1
</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1519043369"></a><span style="">post-revprop-change</span>
<ul><li><a name="Freemind_Link_573261508"></a><span style="">说明</span>
<ul><li><a name="Freemind_Link_197175786"></a><span style="">在修改 revision 属性之后，执行该脚本。因为修改稿已经完成，不可更改，因此本脚本的返回值被忽略（不过实际上的实现似乎是该脚本的正确执行与否影响属性修改）</span>

</li></ul>
<ul><li><a name="Freemind_Link_1186167411"></a><span style="">一般用于触发邮件通知</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_350935627"></a><span style="">参数</span>
<ul><li><a name="Freemind_Link_1582127363"></a><span style="">[1] REPOS-PATH   (the path to this repository)</span></li></ul>
<ul><li><span style="">[2] REV          (the revision that was tweaked)</span></li></ul>
<ul><li><span style="">[3] USER         (the username of the person tweaking the property)</span></li></ul>
<ul><li><span style="">[4] PROPNAME     (the property being set on the revision)</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1485945996"></a><span style="">定制：发送邮件</span>
<ul><li><a name="Freemind_Link_1778260598"></a><span style="">perl</span>
<ul><li><a name="Freemind_Link_1975729266"></a><span style="">propchange-email.pl</span>
<ul><li><a name="Freemind_Link_282416210"></a><span style="">语法: propchange-email.pl REPOS REVNUM  USER PROPNAME [[-m regex] [options] [email_addr ...]] ...</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1017572882"></a><span style="">对于单个项目</span>
<ul><li><a name="Freemind_Link_1680724163"></a><span style="">单个项目，可以用简化的命令行语法</span></li></ul>
<ul><li><a name="Freemind_Link_776757238"></a><span style="">propchange-email.pl REPOS REVNUM   USER PROPNAME  [email_addr ...]</span></li></ul>
<ul><li><a name="Freemind_Link_1872553610"></a><span style="">单个项目有一个默认的配置项组。-m 匹配所有路径</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_56610123"></a><span style="">同时支持多个项目</span>
<ul><li><a name="Freemind_Link_1247003703"></a><span style="">多个 -m 参数，形成多个配置项组： -m pattern --from EMAIL -s subject  EMAIL_ADDR </span></li></ul>
<ul><li><a name="Freemind_Link_1872188513"></a><span style="">propchange-email.pl REPOS REVNUM    USER PROPNAME \
    -m pattern --from EMAIL -s subject  EMAIL_ADDR  \
    -m pattern --from EMAIL -s subject  EMAIL_ADDR   \
    -m pattern --from EMAIL -s subject  EMAIL_ADDR </span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_841173021"></a><a style="" href="#Freemind_Link_117535430">python</a>

</li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_283380550"></a><span style="">pre-lock</span>
<ul><li><a name="Freemind_Link_391878944"></a><span style="">说明：对文件进行加锁操作之前</span></li></ul>
<ul><li><a name="Freemind_Link_606551952"></a><span style="">定制：检查已经存在的 lock 的属主，如果是本人，允许 lock</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1996415090"></a><span style="">post-lock</span>
<ul><li><a name="Freemind_Link_1152833475"></a><span style="">说明：对文件进行加锁操作之后</span></li></ul>
<ul><li><a name="Freemind_Link_260529753"></a><a style="" href="#Freemind_Link_117535430">定制：发送邮件</a>

</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1883158926"></a><span style="">pre-unlock</span>
<ul><li><a name="Freemind_Link_1389887725"></a><span style="">说明：对文件进行解锁操作之前</span></li></ul>
<ul><li><a name="Freemind_Link_1476256192"></a><span style="">定制：检查已经存在的 lock 的属主，如果是本人，允许 lock</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_921605161"></a><span style="">post-unlock</span>
<ul><li><a name="Freemind_Link_1087943438"></a><span style="">说明：对文件进行解锁操作之后</span></li></ul>
<ul><li><a name="Freemind_Link_1147463029"></a><a style="" href="#Freemind_Link_117535430">定制：发送邮件</a>

</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_319999180"></a><span style="">Windows 平台上的 Subversion Hooks</span>
<ul><li><a name="Freemind_Link_962435697"></a><span style="">说明</span>
<ul><li><a name="Freemind_Link_713698479"></a><span style="">Windows 上的可执行程序是依据扩展名识别的，因此 Hooks 脚本需要带扩展名。如 pre-commit.bat, 或者 pre-commit.exe</span></li></ul>
<ul><li><a name="Freemind_Link_181256137"></a><span style="">Windows 平台的 SVN Hooks，仍然沿用了 Unix 的脚本，因而需要安装 Perl, Python 等软件</span></li></ul>
<ul><li><a name="Freemind_Link_1401676405"></a><span style="">更多的采用 Python 脚本，因为一些 Perl 脚本用到了命令管道等没有移植到 Windows 平台的 Perl Feature。</span></li></ul>
<ul><li><a name="Freemind_Link_335852987"></a><a style="" href="#Freemind_Link_1529978846">代码下载，参见</a>

</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_817594202"></a><span style="">pre-commit.bat</span>
<ul><li><a name="Freemind_Link_590165311"></a><span style="">定制：检查 Commit Log 长度</span>

<ul><li><a name="Freemind_Link_234342505"></a><span style="">commit_log_check.py</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1986187875"></a><span style="">定制：检查 Commit Log 内容</span>

<ul><li><a name="Freemind_Link_1237060903"></a><span style="">commit_log_check.py</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_947028944"></a><span style="">定制：检查新增文件的 svn:mime-type，以及 svn:eol-style 设置</span>
<ul><li><a name="Freemind_Link_1644449450"></a><span style="">check-mime-type.py</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_185206072"></a><span style="">pre-revprop-change.bat</span>
<ul><li><a name="Freemind_Link_1555773834"></a><span style="">定制：只允许修改 svn:log，不允许修改其他属性（如 svn:author） </span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_557084760"></a><span style="">尚未实现功能</span>
<ul><li><a name="Freemind_Link_1284603916"></a><span style="">由于 subversion 的 Python Binding 在 Windows 平台的移植的困难，很多用到 svn python 模块的脚本没有移植。可以考虑将依赖 subversion python binding 的脚本用 svnlook 重写。</span></li></ul>
<ul><li><a name="Freemind_Link_1439981208"></a><span style="">邮件：可以考虑使用 Cygwin 的 exim, ssmtp 等替代 脚本中的 sendmail</span></li></ul>
</li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1982906981"></a><span style="">关于本文</span>
<ul><li><a name="Freemind_Link_452334831"></a><span style="">作者</span>
<ul><li><a name="Freemind_Link_1545358139"></a><span style="">J</span>
<ul><li><a name="Freemind_Link_1880872410"></a><span style="">Jiang Xin</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1128278540"></a><span style="">等待你的加入...</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1726486432"></a><span style="">版本</span>
<ul><li><a name="Freemind_Link_1675565747"></a><span style="">0.2, 2006/5/8</span>
<ul><li><a name="Freemind_Link_1763737594"></a><span style="">增加 Windows 上的 SVN Hooks 脚本;</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_784525211"></a><span style="">0.1</span></li></ul>
</li></ul>
<ul><li><a name="Freemind_Link_1919660892"></a><span style="">参考资料</span>
<ul><li><a name="Freemind_Link_562143718"></a><span style="">《Version Control with Subversion》</span></li></ul>
</li></ul>
</li></ul>
</li></ul>
</p><p class="info">Subversion Hooks//mm2html.xsl FreemindVersion:0.8.0</p>
